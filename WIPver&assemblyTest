Verilog WIP

module testbench;
reg reset = 0;
reg clk = 0;
wire halted;
processor PE(halted, reset, clk);
initial begin
  $dumpfile;
  $dumpvars(0, PE);
  #10 reset = 1;
  #10 reset = 0;
  while (!halted) begin
    #10 clk = 1;
    #10 clk = 0;
  end
  $finish;
end
endmodule

Assembly 
.text
	.origin	0x0000
start:	a2r	$2,	add	$3
	and	$4,	cvt	$5
	cf8	$6, here+0
	ci8	$7, here+1
	div	$r0,	jr	$r1
	jnz8	$r2, here+2
	jp8	here+3
	.data		; switch to data segment
	.origin	0x0080
here:	.word	42
	.text		; continue where we left off
	jz8	$r3, here+3
	lf	$r4,	mul	$ra
	li	$rv,	not	$sp
	or	$0,	r2a	$1
	pre	here+4
	sh	$2,	slt	$3
	st	$4,	sub	$5
	sys	here+5
	xor	$6,	a2r	$7
  cf $r0, 0xFFFF
  ci $r1, 0xF00F
  jnz $ra, 0xFF00
  jz $rv, 0xFFF0
  jp 0x000F
